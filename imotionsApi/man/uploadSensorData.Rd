% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imotionsApi.R
\name{uploadSensorData}
\alias{uploadSensorData}
\title{Create a new sensor for a specific respondent/segment in a study.}
\usage{
uploadSensorData(
  params,
  study,
  data,
  target,
  sensorName,
  scriptName,
  metadata = NULL,
  stimulus = NULL,
  overwrite = TRUE
)
}
\arguments{
\item{params}{The list of parameters provided to the script - specific parameters value will be stored as metadata.}

\item{study}{An imStudy object as returned from \code{\link{imStudy}}.}

\item{data}{A data.table containing the signals to upload (imData object are also accepted).}

\item{target}{The target respondent/segment for the sensor (an imRespondent/imSegment object as returned from
\code{\link{getRespondents}} or \code{\link{getSegments}}).}

\item{sensorName}{The name of the new sensor you would like to create.}

\item{scriptName}{The name of the script used to produce these signals.}

\item{metadata}{Optional - a data.table with metadata information. Column names will be converted to metadata headers
and there must be a row corresponding to each data column.}

\item{stimulus}{Optional - an imStimulus object as returned from \code{\link{getStimuli}} to upload data specific to
this stimulus. In case of a segment target, this parameter needs to be provided.}

\item{overwrite}{Optional - a boolean indicating if the new sensor should overwrite sensors generated for the same
flowName. By default, they are overwritten.}
}
\description{
Signals data.table (with a Timestamp column) can be uploaded.
After processing, the sensor can then be viewed and exported locally through the iMotions Desktop.
}
\details{
Params required field are "iMotionsVersion" and "flowName" (flow name will be use as "instance" of the new sensor)
}
\examples{
\dontrun{
connection <- imotionsApi::imConnection("xxxxxxxx")
studies <- imotionsApi::listStudies(connection)
study <- imotionsApi::imStudy(connection, studies$id[1])
respondents <- imotionsApi::getRespondents(study)
segments <- imotionsApi::getSegments(study)
data <- data.frame("Timestamp" = seq(1:100), "Thresholded value" = rep(0, 100))
params <- list("iMotionsVersion" = 8, "flowName" = "Test")

uploadSensorData(params, study, data, respondents[1, ], sensorName = "New sensor",
                 scriptName = "Example Script")

# Uploading data to a specific stimulus
stimuli <- imotionsApi::getStimuli(study)
uploadSensorData(params, study, data, respondents[1, ], sensorName = "New sensor",
                 scriptName = "Example Script", stimulus = stimuli[1, ])

# Uploading data to a specific segment/stimulus
stimuli <- imotionsApi::getStimuli(study)
uploadSensorData(params, study, data, segments[1, ], sensorName = "New sensor",
                 scriptName = "Example Script", stimulus = stimuli[1, ])

# Adding some metadata to the data
metadata <- data.table("Units" = c("ms", ""), "Show" = c("FALSE", "TRUE"))
uploadSensorData(params, study, data, respondents[1, ], sensorName = "New sensor",
                 scriptName = "Example Script", metadata)
}
}
